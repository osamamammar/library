let myLibrary=JSON.parse(localStorage.getItem("library"))||[],clearFormFlag=!1,validationFormFlag=!1,currentBookId=null;const bookName=document.querySelector("#bookName"),authorName=document.querySelector("#authorName"),pagesNumber=document.querySelector("#pagesNumber"),statue=document.querySelector("#statue"),tableBody=document.querySelector(".books_container"),submitFormBtn=document.querySelector(".form"),bookErrorMsg=document.querySelector(".book-error-msg"),authorErrorMsg=document.querySelector(".author-error-msg"),numberErrorMsg=document.querySelector(".number-error-msg"),overlay=document.querySelector(".overlay"),modalContainer=document.querySelector(".modal-container"),closeModalIcon=document.querySelector(".modal-container__header--icon"),modalCancelBtn=document.querySelector(".cta-btn--cancel"),modalDeleteBtn=document.querySelector(".cta-btn--delete"),modalDescription=document.querySelector(".modal-container__content--description");function closeModal(){modalContainer.classList.remove("open"),overlay.classList.remove("active"),document.body.classList.remove("no-scroll")}function openModal(e){overlay.classList.add("active"),modalContainer.classList.add("open"),document.body.classList.add("no-scroll"),myLibrary.map(t=>{t._id===e&&changeModalDescription(t)})}function changeModalDescription(e){console.log(e),e&&(modalDescription.innerHTML=`Are you sure you want to delete <span class="description-title">"${e.bookName}"</span> by <span class="description-title">"${e.authorName}"</span> ?`)}function handleSubmitForm(e){e.preventDefault(),addBookToLibrary(),renderUi(),clearFormFlag&&clearForm()}function Book(e,t,o,r,a){this._id=e,this.bookName=t,this.authorName=o,this.pagesNumber=r,this.statue=a}closeModalIcon.addEventListener("click",closeModal),submitFormBtn.addEventListener("submit",handleSubmitForm);let id=makeIdCounter();function makeIdCounter(){return function(){return myLibrary.length>0?myLibrary[myLibrary.length-1]._id+1:0}}function validationForm(){return 0===bookName.value.length?bookErrorMsg.style.display="block":bookErrorMsg.style.display="none",0===authorName.value.length?authorErrorMsg.style.display="block":authorErrorMsg.style.display="none",""===pagesNumber.value||"0"===pagesNumber.value||pagesNumber.value<0?numberErrorMsg.style.display="block":numberErrorMsg.style.display="none",clearFormFlag=!1,validationFormFlag=!!(bookName.value&&authorName.value&&""!==pagesNumber.value&&pagesNumber.value>0)}function addBookToLibrary(){if(validationForm(),validationFormFlag){const e=new Book(id(),bookName.value,authorName.value,pagesNumber.value,statue.value);myLibrary.push(e),updateLibraryInLocalStorage(),clearFormFlag=!0,validationFormFlag=!1}}function changeStatue(e){"read"===myLibrary[e].statue?myLibrary[e].statue="not read":myLibrary[e].statue="read"}function deleteBook(e){return myLibrary.splice(e,1)}function findBook(e,t){if(0!==e.length&&null!==e)return e.findIndex(e=>e._id===t)}function clearForm(){bookName.value="",authorName.value="",pagesNumber.value="",statue.value="read"}function updateLibraryInLocalStorage(){localStorage.setItem("library",JSON.stringify(myLibrary))}function renderUi(){tableBody.innerHTML="",myLibrary.map(e=>{const t=`\n      <tr>\n        <td>${e.bookName}</td>\n        <td>${e.authorName}</td>\n        <td>${e.pagesNumber}</td>\n        <td><button class="statue-btn ${"read"===e.statue?"dark":""}" data-id="${e._id}">${e.statue}</button></td>\n        <td><button class="delete-book" data-id="${e._id}"></button></td>\n      </tr>\n      `;tableBody.insertAdjacentHTML("afterbegin",t)}),changeStatueBtnAfterRenderUi(),deleteBookBtnAfterRenderUi()}function changeStatueBtnAfterRenderUi(){const e=document.querySelectorAll(".statue-btn");0!==e.length&&e.forEach(e=>e.addEventListener("click",handleChangeEvent))}function handleChangeEvent(e){const t=Number(e.target.dataset.id);changeStatue(findBook(myLibrary,t)),updateLibraryInLocalStorage(),renderUi()}function deleteBookBtnAfterRenderUi(){const e=document.querySelectorAll(".delete-book");0!==e.length&&e.forEach(e=>{e.addEventListener("click",handleDeleteEvent)})}function handleDeleteEvent(e){const t=Number(e.target.dataset.id);openModal(t),console.log(t,"currentTarget"),currentBookId=t}function handleDeleteModalBtn(e){console.log(findBook(myLibrary,e)),deleteBook(findBook(myLibrary,e)),updateLibraryInLocalStorage(),renderUi(),closeModal()}renderUi(),modalCancelBtn.addEventListener("click",closeModal),modalDeleteBtn.addEventListener("click",function(){handleDeleteModalBtn(currentBookId)});